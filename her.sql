--실습 join 08

SELECT REGIONS.REGION_ID, REGIONS.REGION_NAME, COUNTRIES.COUNTRY_NAME
FROM COUNTRIES ,REGIONS
WHERE COUNTRIES.REGION_ID = REGIONS.REGION_ID
AND REGION_NAME in 'Europe';

--실습 JOIN 09
--(row 9 - france, Denmark, Belgium 3개 국가에 속하는 locaionts 정보는 미존재
-- 나머지 5개중에 다수의 location 정보를 갖고있는 국가가 존재한다.)
SELECT REGIONS.REGION_ID, REGIONS.REGION_NAME, COUNTRIES.COUNTRY_NAME, LOCATIONS.CITY
FROM COUNTRIES ,REGIONS, LOCATIONS
WHERE COUNTRIES.REGION_ID = REGIONS.REGION_ID
AND COUNTRIES.COUNTRY_ID = LOCATIONS.COUNTRY_ID
AND REGION_NAME in 'Europe';

--실습 JOIN 10

SELECT REGIONS.REGION_ID, REGIONS.REGION_NAME, COUNTRIES.COUNTRY_NAME, 
        LOCATIONS.CITY, DEPARTMENTS.DEPARTMENT_NAME
FROM COUNTRIES ,REGIONS, LOCATIONS, DEPARTMENTS
WHERE COUNTRIES.REGION_ID = REGIONS.REGION_ID
AND COUNTRIES.COUNTRY_ID = LOCATIONS.COUNTRY_ID
AND LOCATIONS.LOCATION_ID = DEPARTMENTS.LOCATION_ID
AND REGION_NAME in 'Europe';

--실습 JOIN 11
SELECT
    *
FROM EMPLOYEES;

SELECT REGIONS.REGION_ID, REGIONS.REGION_NAME, COUNTRIES.COUNTRY_NAME, 
    LOCATIONS.CITY, DEPARTMENTS.DEPARTMENT_NAME,EMPLOYEES.LAST_NAME||EMPLOYEES.FIRST_NAME AS NAME
FROM COUNTRIES ,REGIONS, LOCATIONS, DEPARTMENTS, EMPLOYEES
WHERE COUNTRIES.REGION_ID = REGIONS.REGION_ID
AND COUNTRIES.COUNTRY_ID = LOCATIONS.COUNTRY_ID
AND LOCATIONS.LOCATION_ID = DEPARTMENTS.LOCATION_ID
AND EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
AND REGION_NAME in 'Europe';

--실습 JOIN 12

SELECT EMPLOYEES.EMPLOYEE_ID,EMPLOYEES.LAST_NAME||EMPLOYEES.FIRST_NAME AS NAME,JOBS.JOB_ID,JOBS.JOB_TITLE
FROM EMPLOYEES, JOBS
WHERE JOBS.JOB_ID = EMPLOYEES.JOB_ID;

--실습 JOIN 13

SELECT EMPLOYEES.MANAGER_ID MGR_ID,
        EMPLOYEES.FIRST_NAME||EMPLOYEES.LAST_NAME AS MGR_NAME,
        EMPLOYEES.EMPLOYEE_ID,
        EMPLOYEES.LAST_NAME||EMPLOYEES.FIRST_NAME AS NAME,
        JOBS.JOB_ID,JOBS.JOB_TITLE
FROM EMPLOYEES, JOBS, EMPLOYEES MANAGER
WHERE JOBS.JOB_ID = EMPLOYEES.JOB_ID
AND EMPLOYEES.MANAGER_ID = MANAGER.EMPLOYEE_ID;



SELECT
    *
FROM EMPLOYEES;
